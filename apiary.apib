dFORMAT: 1A
HOST: http://valuestreams.krigoo.be/

# Agile Value Manager

Agile Value Manager allows automation of Value Stream Management, to be used with HPE ALM Octane.

## Value Streams [/streams]

### List All Value Streams [GET]

+ Response 200 (application/json)

        [
            {
                "count": 3,
                "valuestreams": [
                    {
                        "id": 2,
                        "name": "Value Stream A",
                        "owner": [
                            "type": "workspace_user",
                            "id": 2002
                        ]
                    }, {
                        "id": 3,
                        "name": "Value Stream B",
                        "owner": [
                            "type": "workspace_user",
                            "id": 1001
                        ]
                    }, {
                        "id": 5,
                        "name": "Value Stream C",
                        "owner": [
                            "type": "workspace_user",
                            "id": 2003
                        ]
                    }
                ]
            }
        ]

### Create a New Value Stream [POST]

Add a new Value Stream to the Octane workspace.

+ Request (application/json)

        {
            "name": "Value Stream Name",
            "owner": [
                "type": "workspace_user",
                "id": "id"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /stream/2

    + Body

            {
                "id": 2
            }

## Validations [/validations]   
A validation creates the necessary User Stories and assign them to the responsible teams.

### List All Validations [GET]

+ Request (application/json)

        {
            "filter": "all"
        }

+ Response 201 (application/json)

    + Headers
    
            Location: /validation

    + Body
    
            {
                "id": 2
            }

## Validation [/validation]            
### Get a Validation [GET]

+ Request (application/json)

        {
            "feature": id,
            "release": id,
            "team": id,
            "storypoints": value
        }
        
+ Response 201 (application/json)

    + Headers

            Location: /validation/2
            
    + Body
    
            {
                "count": 3
                "stories": [
                    "id": 2,
                    "id": 3,
                    "id": 5
                ]
            }